{"ast":null,"code":"import createStore from 'unistore';\nimport axios from 'axios'; // Initialization global state\n\nconst initialState = {\n  baseUrl: 'https://kutubuku.store',\n  adminProductKeyword: '',\n  adminKeyword: '',\n  length_cart: 0,\n  id_payment: '',\n  id_cart: '',\n  id_user: '',\n  adminAllPayment: [],\n  userAllCart: [],\n  adminAllCart: [],\n  userData: [],\n  cart_id: 0,\n  adminAllBook: [],\n  allUser: [],\n  bookOwn: [],\n  kode_pemesanan: '',\n  tanggal_pemesanan: '',\n  total_pembayaran: '',\n  userId: '',\n  listResults: [],\n  listCategory: [],\n  ongkos_kirim: 0,\n  total_price: 0,\n  carts: [],\n  book_id: '',\n  books: [],\n  bookById: [],\n  userById: [],\n  id: '',\n  isLoading: true,\n  token: '',\n  photo: '',\n  nama_lengkap: '',\n  email: '',\n  kata_sandi: '',\n  is_login: false,\n  Bearer: '',\n  judul: '',\n  penulis: '',\n  jumlah_halaman: '',\n  tanggal_terbit: '',\n  isbn: '',\n  genre: '',\n  bahasa: '',\n  penerbit: '',\n  berat: 0,\n  lebar: 0,\n  panjang: 0,\n  jenis_cover: '',\n  status: '',\n  harga: 0,\n  totalBeli: [],\n  stok: [],\n  foto_buku: '',\n  keyword: '',\n  kategori: '',\n  disable: true,\n  address: true,\n  nama_jalan: '',\n  rt_rw: '',\n  kelurahan: '',\n  kecamatan: '',\n  kota_kabupaten: '',\n  provinsi: '',\n  kode_pos: '',\n  nomor_telepon: '',\n  validasiPostBuku: false,\n  validasiUpdateBuku: false,\n  cart_content: true\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  changeInput: async (state, e) => {\n    await store.setState({\n      [e.target.name]: e.target.value\n    });\n  },\n  changeInputCart: async (state, e) => {\n    await store.setState({\n      'stok': {\n        id: e.target.id,\n        [e.target.name]: e.target.value\n      }\n    });\n    state.totalBeli.push(store.getState().stok);\n  },\n  // Function for Sign Up\n  postSignUp: async state => {\n    const nama_lengkap = state.nama_lengkap;\n    const kata_sandi = state.kata_sandi;\n    const email = state.email;\n    const mydata = {\n      nama_lengkap: nama_lengkap,\n      email: email,\n      kata_sandi: kata_sandi\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/user\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for Login\n  postLogin: async state => {\n    const kata_sandi = state.kata_sandi;\n    const email = state.email;\n    const mydata = {\n      email: email,\n      kata_sandi: kata_sandi\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"is_login\", true);\n      localStorage.setItem(\"token\", response.data.token);\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for user upload book\n  postBook: async state => {\n    const judul = state.judul;\n    const penulis = state.penulis;\n    const jumlah_halaman = state.jumlah_halaman;\n    const tanggal_terbit = state.tanggal_terbit;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.jenis_cover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.foto_buku;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: jumlah_halaman,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'validasiPostBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting Book\n  deleteItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/book/edit/\" + state.book_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        book_id: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for delete cart by user\n  deleteCartItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.cart_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        book_id: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for update book by user\n  updateBook: async state => {\n    const judul = state.judul;\n    const penulis = state.penulis;\n    const jumlah_halaman = state.jumlah_halaman;\n    const tanggal_terbit = state.tanggal_terbit;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.jenis_cover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.foto_buku;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: jumlah_halaman,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl + \"/book/edit/\" + state.book_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      localStorage.setItem('user_id', response.data.user_id);\n      store.setState({\n        'validasiUpdateBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for add book to cart\n  addCartItem: async state => {\n    const book_id = state.bookById.id;\n    const judul = state.bookById.judul;\n    const penulis = state.bookById.penulis;\n    const jenis_cover = state.bookById.jenis_cover;\n    const foto_buku = state.bookById.foto_buku;\n    const harga = state.bookById.harga;\n    const stok = 1;\n    const berat = state.bookById.berat;\n    const status_jual = state.bookById.status;\n    const buybook = {\n      book_id: book_id,\n      judul: judul,\n      penulis: penulis,\n      berat: berat,\n      jenis_cover: jenis_cover,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      status_jual: status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req).then(response => {\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for calculating total price\n  Calculate: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"total_price\": response.data,\n        \"disable\": false\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting expedition price\n  CalculateExpeditionPrice: async state => {\n    const nama_jalan = state.nama_jalan;\n    const rt_rw = state.rt_rw;\n    const kelurahan = state.kelurahan;\n    const kecamatan = state.kecamatan;\n    const kota_kabupaten = state.kota_kabupaten;\n    const provinsi = state.provinsi;\n    const kode_pos = state.kode_pos;\n    const nomor_telepon = state.nomor_telepon;\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan: kecamatan,\n      kota_kabupaten: kota_kabupaten,\n      provinsi: provinsi,\n      kode_pos: kode_pos,\n      nomor_telepon: nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'ongkos_kirim': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting final transaction price \n  FinalTransactionPayment: async state => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'total_pembayaran': response.data.total_biaya,\n        'tanggal_pemesanan': response.data.tanggal_pemesanan,\n        'kode_pemesanan': response.data.nomor_pemesanan\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching book by title or writer\n  searchBook: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/book/search?keyword=\" + store.getState().keyword\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'listResults': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching and grouping user by category\n  categoryBook: async (state, e) => {\n    store.setState({\n      [e.target.name]: e.target.value\n    });\n    const req = {\n      method: \"get\",\n      url: \"state.baseUrl+/book/category?keyword=\" + store.getState().kategori\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'listCategory': response.data\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for updating amount of buying item\n  updateBuy: async state => {\n    const listBuy = state.totalBeli;\n\n    for (const product of listBuy) {\n      const buybook = {\n        stok: product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl + \"/cart/product/\" + product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req).then(response => {\n        return response;\n      }).catch(error => {\n        return false;\n      });\n    }\n  },\n  // Function for deleting user by admin\n  deleteUser: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/user/\" + state.id_user,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        id_user: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting cart on user side\n  deleteCart: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.id_cart,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        id_user: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta17/Desktop/React_Portofolio/porto_react/src/store.js"],"names":["createStore","axios","initialState","baseUrl","adminProductKeyword","adminKeyword","length_cart","id_payment","id_cart","id_user","adminAllPayment","userAllCart","adminAllCart","userData","cart_id","adminAllBook","allUser","bookOwn","kode_pemesanan","tanggal_pemesanan","total_pembayaran","userId","listResults","listCategory","ongkos_kirim","total_price","carts","book_id","books","bookById","userById","id","isLoading","token","photo","nama_lengkap","email","kata_sandi","is_login","Bearer","judul","penulis","jumlah_halaman","tanggal_terbit","isbn","genre","bahasa","penerbit","berat","lebar","panjang","jenis_cover","status","harga","totalBeli","stok","foto_buku","keyword","kategori","disable","address","nama_jalan","rt_rw","kelurahan","kecamatan","kota_kabupaten","provinsi","kode_pos","nomor_telepon","validasiPostBuku","validasiUpdateBuku","cart_content","store","actions","changeInput","state","e","setState","target","name","value","changeInputCart","push","getState","postSignUp","mydata","req","method","url","headers","data","then","response","catch","error","postLogin","localStorage","setItem","postBook","sinopsis","mybook","Authorization","getItem","deleteItem","deleteCartItem","updateBook","user_id","addCartItem","status_jual","buybook","Calculate","CalculateExpeditionPrice","myaddress","FinalTransactionPayment","total_biaya","nomor_pemesanan","searchBook","categoryBook","updateBuy","listBuy","product","deleteUser","deleteCart"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n\n// Initialization global state\nconst initialState = {\n  baseUrl:'https://kutubuku.store',\n  adminProductKeyword:'',\n  adminKeyword:'',\n  length_cart:0,\n  id_payment:'',\n  id_cart:'',\n  id_user:'',\n  adminAllPayment:[],\n  userAllCart:[],\n  adminAllCart:[],\n  userData:[],\n  cart_id:0,\n  adminAllBook:[],\n  allUser:[],\n  bookOwn:[],\n  kode_pemesanan:'',\n  tanggal_pemesanan:'',\n  total_pembayaran:'',\n  userId:'',\n  listResults:[],\n  listCategory:[],\n  ongkos_kirim:0,\n  total_price:0,\n  carts:[],\n  book_id:'',\n  books:[],\n  bookById:[],\n  userById:[],\n  id:'',\n  isLoading:true,\n  token:'',\n  photo:'',\n  nama_lengkap:'',\n  email:'',\n  kata_sandi:'',\n  is_login: false,\n  Bearer:'',\n  judul:'',\n  penulis:'',\n  jumlah_halaman:'',\n  tanggal_terbit:'',\n  isbn:'',\n  genre:'',\n  bahasa:'',\n  penerbit:'',\n  berat:0,\n  lebar:0,\n  panjang:0,\n  jenis_cover:'',\n  status:'',\n  harga:0,\n  totalBeli:[],\n  stok:[],\n  foto_buku:'',\n  keyword:'',\n  kategori:'',\n  disable:true,\n  address: true,\n  nama_jalan:'',\n  rt_rw:'',\n  kelurahan:'',     \n  kecamatan:'',\n  kota_kabupaten:'', \n  provinsi:'',\n  kode_pos:'',\n  nomor_telepon:'',\n  validasiPostBuku:false,\n  validasiUpdateBuku:false,\n  cart_content:true\n}\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n  changeInput : async (state,e) => {\n    await store.setState({ [e.target.name]: e.target.value});\n  },\n\n  changeInputCart : async (state,e) => {\n    await store.setState({ \n      'stok':{ id: e.target.id,\n        [e.target.name]: e.target.value}\n    });\n    state.totalBeli.push(store.getState().stok)\n  },\n\n  // Function for Sign Up\n  postSignUp : async (state) => {\n      const nama_lengkap = state.nama_lengkap\n      const kata_sandi = state.kata_sandi\n      const email = state.email\n      const mydata = {\n          nama_lengkap: nama_lengkap,\n          email: email,\n          kata_sandi: kata_sandi\n      };\n      const req = {\n        method: \"post\",\n        url: state.baseUrl+\"/user\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: mydata\n      };\n\n      await axios(req)\n          .then(response => {\n                store.setState({\n                    \"is_login\": true\n                });\n          })\n          .catch(error => {\n              return false\n      })\n  },\n\n  // Function for Login\n  postLogin : async (state) => {\n    const kata_sandi = state.kata_sandi\n    const email = state.email\n    const mydata = {\n        email: email,\n        kata_sandi: kata_sandi\n    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n\n    await axios(req)\n      .then(response => {\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"is_login\", true);\n        localStorage.setItem(\"token\", response.data.token);\n      })\n      .catch(error => {\n          return false\n    })\n  },\n\n  // Function for user upload book\n  postBook : async (state) => {\n    const judul = state.judul\n    const penulis = state.penulis\n    const jumlah_halaman = state.jumlah_halaman\n    const tanggal_terbit = state.tanggal_terbit\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.jenis_cover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.foto_buku\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : jumlah_halaman,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'validasiPostBuku':true\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for deleting Book\n  deleteItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/book/edit/\"+state.book_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            book_id:''\n        })\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for delete cart by user\n  deleteCartItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.cart_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            book_id:''\n        })\n    })\n    .catch(error => {\n        return false\n    })\n  },\n\n  // Function for update book by user\n  updateBook : async (state) => {\n    const judul = state.judul\n    const penulis = state.penulis\n    const jumlah_halaman = state.jumlah_halaman\n    const tanggal_terbit = state.tanggal_terbit\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.jenis_cover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.foto_buku\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : jumlah_halaman,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl+\"/book/edit/\"+state.book_id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n      .then(response => {\n        localStorage.setItem('user_id', response.data.user_id)\n        store.setState({\n          'validasiUpdateBuku':true\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for add book to cart\n  addCartItem : async (state) => {\n    const book_id = state.bookById.id\n    const judul = state.bookById.judul\n    const penulis = state.bookById.penulis\n    const jenis_cover = state.bookById.jenis_cover\n    const foto_buku = state.bookById.foto_buku\n    const harga = state.bookById.harga\n    const stok = 1\n    const berat = state.bookById.berat\n    const status_jual = state.bookById.status\n    const buybook = {\n      book_id : book_id,\n      judul : judul,\n      penulis : penulis,\n      berat : berat,\n      jenis_cover : jenis_cover,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      status_jual : status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req)\n      .then(response => {\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for calculating total price\n  Calculate : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            \"total_price\": response.data,\n            \"disable\": false\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n\n\n  },\n\n  // Function for getting expedition price\n  CalculateExpeditionPrice : async (state) => {\n    const nama_jalan = state.nama_jalan\n    const rt_rw = state.rt_rw\n    const kelurahan = state.kelurahan\n    const kecamatan = state.kecamatan\n    const kota_kabupaten = state.kota_kabupaten\n    const provinsi = state.provinsi\n    const kode_pos = state.kode_pos\n    const nomor_telepon = state.nomor_telepon\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan : kecamatan,\n      kota_kabupaten : kota_kabupaten,\n      provinsi : provinsi,\n      kode_pos : kode_pos,\n      nomor_telepon : nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'ongkos_kirim':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for getting final transaction price \n  FinalTransactionPayment : async (state) => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'total_pembayaran':response.data.total_biaya,\n          'tanggal_pemesanan':response.data.tanggal_pemesanan,\n          'kode_pemesanan':response.data.nomor_pemesanan\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching book by title or writer\n  searchBook : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/book/search?keyword=\"+store.getState().keyword,\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'listResults':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching and grouping user by category\n  categoryBook : async (state,e) => {\n    store.setState({ [e.target.name]: e.target.value });\n    const req = {\n      method: \"get\",\n      url: \"state.baseUrl+/book/category?keyword=\"+store.getState().kategori\n    };\n\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'listCategory':response.data\n          })\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for updating amount of buying item\n  updateBuy : async (state) => {\n    \n    const listBuy = state.totalBeli\n    for (const product of listBuy) {\n      const buybook = {\n        stok : product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl+\"/cart/product/\"+product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req)\n          .then(response => {\n            return response\n          })\n          .catch(error => {\n            return false\n      })\n    }\n  },\n\n  // Function for deleting user by admin\n  deleteUser : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/user/\"+state.id_user,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n              id_user:''\n          })\n    })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for deleting cart on user side\n  deleteCart : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.id_cart,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          id_user:''\n          })\n      })\n      .catch(error => {\n        return false\n    })\n  }\n\n  });\n\n\n\n"]},"metadata":{},"sourceType":"module"}