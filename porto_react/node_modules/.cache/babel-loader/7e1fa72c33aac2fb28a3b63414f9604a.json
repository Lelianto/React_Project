{"ast":null,"code":"import createStore from 'unistore';\nimport axios from 'axios'; // https://kutubuku.store\n// Initialization global state\n\nconst initialState = {\n  bookEmptyStock: [],\n  baseUrl: 'http://0.0.0.0:5000',\n  remainingBook: '',\n  addCartStatus: '',\n  adminProductKeyword: '',\n  adminKeyword: '',\n  lengthCart: 0,\n  paymentId: '',\n  //id_payment (n)\n  cartId: '',\n  //id_cart (n)\n  userId: '',\n  //id_user (ada)\n  adminAllPayment: [],\n  userAllCart: [],\n  adminAllCart: [],\n  userData: [],\n  userCartId: 0,\n  //cart_id (ada)\n  adminAllBook: [],\n  allUser: [],\n  bookOwn: [],\n  orderCode: '',\n  //kode_pemesanan (ada)\n  orderDate: '',\n  //tanggal_pemesanan\n  totalPayment: '',\n  //total_pembayaran  \n  listResults: [],\n  listCategory: [],\n  shippingCost: 0,\n  //ongkos_kirim  \n  totalPrice: 0,\n  //total_price  \n  carts: [],\n  bookId: '',\n  //book_id  \n  books: [],\n  bookById: [],\n  userById: [],\n  id: '',\n  isLoading: true,\n  token: '',\n  photo: '',\n  fullName: '',\n  //nama_lengkap  \n  email: '',\n  password: '',\n  //kata_sandi  \n  isLogin: false,\n  //is_login (ada)\n  Bearer: '',\n  title: '',\n  writer: '',\n  pageTitle: '',\n  //judul_halaman\n  totalPage: 0,\n  //jumlah_halaman\n  publishDate: '',\n  isbn: '',\n  genre: '',\n  bahasa: '',\n  penerbit: '',\n  berat: 0,\n  lebar: 0,\n  panjang: 0,\n  bookCover: '',\n  status: '',\n  harga: 0,\n  totalBeli: [],\n  stok: [],\n  bookPhoto: '',\n  keyword: '',\n  kategori: '',\n  disable: true,\n  address: true,\n  streetName: '',\n  rtRw: '',\n  village: '',\n  // kelurahan     \n  region: '',\n  // kecamatan\n  cityState: '',\n  // kota_kabupaten \n  province: '',\n  // provinsi\n  postalCode: '',\n  //kode_pos\n  phoneNumber: '',\n  // nomor_telepon\n  validasiPostBuku: false,\n  validasiUpdateBuku: false,\n  cartContent: true // cart_content\n\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  changeInput: async (state, e) => {\n    await store.setState({\n      [e.target.name]: e.target.value\n    });\n  },\n  changeInputCart: async (state, e) => {\n    await store.setState({\n      'stok': {\n        id: e.target.id,\n        [e.target.name]: e.target.value\n      }\n    });\n    state.totalBeli.push(store.getState().stok);\n  },\n  // Function for Sign Up\n  postSignUp: async state => {\n    const fullName = state.fullName;\n    const password = state.password;\n    const email = state.email;\n    const mydata = {\n      nama_lengkap: fullName,\n      email: email,\n      kata_sandi: password\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/user\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_Lgin\": true\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for Login\n  postLogin: async state => {\n    const password = state.password;\n    const email = state.email;\n    const mydata = {\n      email: email,\n      kata_sandi: password\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      localStorage.setItem(\"email\", email);\n      localStorage.setItem(\"is_Lgin\", true);\n      localStorage.setItem(\"token\", response.data.token);\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for user upload book\n  postBook: async state => {\n    const judul = state.title;\n    const penulis = state.writer;\n    const jumlah_halaman = state.totalPage;\n    const tanggal_terbit = state.publishDate;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.bookCover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.bookPhoto;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: jumlah_halaman,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'validasiPostBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting Book\n  deleteItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/book/edit/\" + state.book_Id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        book_Id: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for delete cart by user\n  deleteCartItem: async state => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.userCartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        book_Id: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for update book by user\n  updateBook: async state => {\n    const judul = state.title;\n    const penulis = state.writer;\n    const totalPage = state.totalPage;\n    const tanggal_terbit = state.publishDate;\n    const isbn = state.isbn;\n    const genre = state.genre;\n    const bahasa = state.bahasa;\n    const penerbit = state.penerbit;\n    const berat = state.berat * 1;\n    const lebar = state.lebar * 1;\n    const panjang = state.panjang * 1;\n    const jenis_cover = state.bookCover;\n    const status = state.status;\n    const harga = state.harga * 1;\n    const stok = state.stok * 1;\n    const foto_buku = state.bookPhoto;\n    const sinopsis = state.sinopsis;\n    const mybook = {\n      judul: judul,\n      penulis: penulis,\n      jumlah_halaman: totalPage,\n      tanggal_terbit: tanggal_terbit,\n      isbn: isbn,\n      genre: genre,\n      bahasa: bahasa,\n      penerbit: penerbit,\n      berat: berat,\n      lebar: lebar,\n      panjang: panjang,\n      jenis_cover: jenis_cover,\n      status: status,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      sinopsis: sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl + \"/book/edit/\" + state.book_I,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req).then(response => {\n      localStorage.setItem('user_id', response.data.user_id);\n      store.setState({\n        'validasiUpdateBuku': true\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for add book to cart\n  addCartItem: async state => {\n    const book_id = state.bookById.id;\n    const judul = state.bookById.judul;\n    const penulis = state.bookById.penulis;\n    const jenis_cover = state.bookById.jenis_cover;\n    const foto_buku = state.bookById.foto_buku;\n    const harga = state.bookById.harga;\n    const stok = 1;\n    const berat = state.bookById.berat;\n    const status_jual = state.bookById.status;\n    const buybook = {\n      book_id: book_id,\n      judul: judul,\n      penulis: penulis,\n      berat: berat,\n      jenis_cover: jenis_cover,\n      harga: harga,\n      stok: stok,\n      foto_buku: foto_buku,\n      status_jual: status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req).then(response => {\n      console.log(response.data.message);\n      store.setState({\n        'addCartStatus': response.data.message\n      }); // return response.data.message\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for calculating total price\n  Calculate: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"totalPrice\": response.data,\n        \"disable\": false\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting expedition price\n  CalculateExpeditionPrice: async state => {\n    const nama_jalan = state.streetName;\n    const rt_rw = state.rt_rw;\n    const kelurahan = state.village;\n    const kecamatan = state.region;\n    const kota_kabupaten = state.cityState;\n    const provinsi = state.province;\n    const kode_pos = state.postalCode;\n    const nomor_telepon = state.phoneNumber;\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan: kecamatan,\n      kota_kabupaten: kota_kabupaten,\n      provinsi: provinsi,\n      kode_pos: kode_pos,\n      nomor_telepon: nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'shippingCost': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for getting final transaction price \n  FinalTransactionPayment: async state => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl + \"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'totalPayment': response.data.total_biaya,\n        'orderDate': response.data.tanggal_pemesanan,\n        'orderCode': response.data.nomor_pemesanan\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching book by title or writer\n  searchBook: async state => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/book/search?keyword=\" + store.getState().keyword\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'listResults': response.data\n      });\n      return response;\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for searching and grouping user by category\n  categoryBook: async (state, e) => {\n    store.setState({\n      [e.target.name]: e.target.value\n    });\n    const req = {\n      method: \"get\",\n      url: state.baseUrl + \"/book/category?keyword=\" + store.getState().kategori\n    };\n    await axios(req).then(response => {\n      store.setState({\n        'listCategory': response.data\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for updating amount of buying item\n  updateBuy: async state => {\n    const listBuy = state.totalBeli;\n\n    for (const product of listBuy) {\n      const buybook = {\n        stok: product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl + \"/cart/product/\" + product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req).then(response => {\n        const listInCart = store.getState().carts.filter(item => {\n          if (item.id == product.id && item.email === localStorage.getItem('email') && item.foto_buku !== null && item.judul !== null && item.harga !== null && item.status_cart === false && item.berat !== null) {\n            return item;\n          }\n\n          return false;\n        });\n        const listBooks = [];\n\n        for (const book of listInCart) {\n          if (response.data.message == 'stok buku tidak mencukupi' && book.book_id) {\n            listBooks.push(book.judul);\n          }\n        }\n\n        store.setState({\n          bookEmptyStock: listBooks\n        });\n      }).catch(error => {\n        return false;\n      });\n    }\n  },\n  // Function for deleting user by admin\n  deleteUser: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/user/\" + state.userId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        userId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  },\n  // Function for deleting cart on user side\n  deleteCart: async (state, e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl + \"/cart/product/\" + state.cartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req).then(response => {\n      store.setState({\n        userId: ''\n      });\n    }).catch(error => {\n      return false;\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta17/Desktop/React_Portofolio/porto_react/src/store.js"],"names":["createStore","axios","initialState","bookEmptyStock","baseUrl","remainingBook","addCartStatus","adminProductKeyword","adminKeyword","lengthCart","paymentId","cartId","userId","adminAllPayment","userAllCart","adminAllCart","userData","userCartId","adminAllBook","allUser","bookOwn","orderCode","orderDate","totalPayment","listResults","listCategory","shippingCost","totalPrice","carts","bookId","books","bookById","userById","id","isLoading","token","photo","fullName","email","password","isLogin","Bearer","title","writer","pageTitle","totalPage","publishDate","isbn","genre","bahasa","penerbit","berat","lebar","panjang","bookCover","status","harga","totalBeli","stok","bookPhoto","keyword","kategori","disable","address","streetName","rtRw","village","region","cityState","province","postalCode","phoneNumber","validasiPostBuku","validasiUpdateBuku","cartContent","store","actions","changeInput","state","e","setState","target","name","value","changeInputCart","push","getState","postSignUp","mydata","nama_lengkap","kata_sandi","req","method","url","headers","data","then","response","catch","error","postLogin","localStorage","setItem","postBook","judul","penulis","jumlah_halaman","tanggal_terbit","jenis_cover","foto_buku","sinopsis","mybook","Authorization","getItem","deleteItem","book_Id","deleteCartItem","updateBook","book_I","user_id","addCartItem","book_id","status_jual","buybook","console","log","message","Calculate","CalculateExpeditionPrice","nama_jalan","rt_rw","kelurahan","kecamatan","kota_kabupaten","provinsi","kode_pos","nomor_telepon","myaddress","FinalTransactionPayment","total_biaya","tanggal_pemesanan","nomor_pemesanan","searchBook","categoryBook","updateBuy","listBuy","product","listInCart","filter","item","status_cart","listBooks","book","deleteUser","deleteCart"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios';\n// https://kutubuku.store\n// Initialization global state\nconst initialState = {\n  bookEmptyStock:[],\n  baseUrl:'http://0.0.0.0:5000',\n  remainingBook:'',\n  addCartStatus:'',\n  adminProductKeyword:'',\n  adminKeyword:'',\n  lengthCart:0,\n  paymentId:'', //id_payment (n)\n  cartId:'', //id_cart (n)\n  userId:'', //id_user (ada)\n  adminAllPayment:[],\n  userAllCart:[],\n  adminAllCart:[],\n  userData:[],\n  userCartId:0, //cart_id (ada)\n  adminAllBook:[],\n  allUser:[],\n  bookOwn:[],\n  orderCode:'', //kode_pemesanan (ada)\n  orderDate:'', //tanggal_pemesanan\n  totalPayment:'', //total_pembayaran  \n  listResults:[],\n  listCategory:[],\n  shippingCost:0,//ongkos_kirim  \n  totalPrice:0, //total_price  \n  carts:[],\n  bookId:'',//book_id  \n  books:[],\n  bookById:[],\n  userById:[],\n  id:'',\n  isLoading:true,\n  token:'',\n  photo:'',\n  fullName:'',//nama_lengkap  \n  email:'',\n  password:'',//kata_sandi  \n  isLogin: false,//is_login (ada)\n  Bearer:'',\n  title:'',\n  writer:'',\n  pageTitle:'',//judul_halaman\n  totalPage:0, //jumlah_halaman\n  publishDate:'',\n  isbn:'',\n  genre:'',\n  bahasa:'',\n  penerbit:'',\n  berat:0,\n  lebar:0,\n  panjang:0,\n  bookCover:'',\n  status:'',\n  harga:0,\n  totalBeli:[],\n  stok:[],\n  bookPhoto:'',\n  keyword:'',\n  kategori:'',\n  disable:true,\n  address: true,\n  streetName:'',\n  rtRw:'',\n  village:'', // kelurahan     \n  region:'', // kecamatan\n  cityState:'', // kota_kabupaten \n  province:'', // provinsi\n  postalCode:'', //kode_pos\n  phoneNumber:'', // nomor_telepon\n  validasiPostBuku:false,\n  validasiUpdateBuku:false,\n  cartContent:true // cart_content\n}\n\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n  changeInput : async (state,e) => {\n    await store.setState({ [e.target.name]: e.target.value});\n  },\n\n  changeInputCart : async (state,e) => {\n    await store.setState({ \n      'stok':{ id: e.target.id,\n        [e.target.name]: e.target.value}\n    });\n    state.totalBeli.push(store.getState().stok)\n  },\n\n  // Function for Sign Up\n  postSignUp : async (state) => {\n      const fullName= state.fullName      \n      const password= state.password      \n      const email = state.email\n      const mydata = {\n          nama_lengkap: fullName,\n          email: email,\n          kata_sandi: password      \n      };\n      const req = {\n        method: \"post\",\n        url: state.baseUrl+\"/user\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: mydata\n      };\n\n      await axios(req)\n          .then(response => {\n                store.setState({\n                    \"is_Lgin\": true\n                });\n          })\n          .catch(error => {\n              return false\n      })\n  },\n\n  // Function for Login\n  postLogin : async (state) => {\n    const password= state.password    \n    const email = state.email\n    const mydata = {\n        email: email,\n        kata_sandi: password    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/token\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n\n    await axios(req)\n      .then(response => {\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"is_Lgin\", true);\n        localStorage.setItem(\"token\", response.data.token);\n      })\n      .catch(error => {\n          return false\n    })\n  },\n\n  // Function for user upload book\n  postBook : async (state) => {\n    const judul = state.title\n    const penulis = state.writer\n    const jumlah_halaman= state.totalPage    \n    const tanggal_terbit = state.publishDate\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.bookCover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.bookPhoto\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : jumlah_halaman,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/book\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'validasiPostBuku':true\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for deleting Book\n  deleteItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/book/edit/\"+state.book_Id,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            book_Id:''\n        })\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for delete cart by user\n  deleteCartItem : async (state) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.userCartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n            book_Id:''\n        })\n    })\n    .catch(error => {\n        return false\n    })\n  },\n\n  // Function for update book by user\n  updateBook : async (state) => {\n    const judul = state.title\n    const penulis = state.writer\n    const totalPage = state.totalPage    \n    const tanggal_terbit = state.publishDate\n    const isbn = state.isbn\n    const genre = state.genre\n    const bahasa = state.bahasa\n    const penerbit = state.penerbit\n    const berat = state.berat * 1\n    const lebar = state.lebar * 1\n    const panjang = state.panjang * 1\n    const jenis_cover = state.bookCover\n    const status = state.status\n    const harga = state.harga * 1\n    const stok = state.stok * 1\n    const foto_buku = state.bookPhoto\n    const sinopsis = state.sinopsis\n    const mybook = {\n      judul : judul,\n      penulis : penulis,\n      jumlah_halaman : totalPage,\n      tanggal_terbit : tanggal_terbit,\n      isbn : isbn,\n      genre : genre,\n      bahasa : bahasa,\n      penerbit : penerbit,\n      berat : berat,\n      lebar : lebar,\n      panjang : panjang,\n      jenis_cover : jenis_cover,\n      status : status,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      sinopsis : sinopsis\n    };\n    const req = {\n      method: \"put\",\n      url: state.baseUrl+\"/book/edit/\"+state.book_I,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: mybook\n    };\n    await axios(req)\n      .then(response => {\n        localStorage.setItem('user_id', response.data.user_id)\n        store.setState({\n          'validasiUpdateBuku':true\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for add book to cart\n  addCartItem : async (state) => {\n    const book_id = state.bookById.id\n    const judul = state.bookById.judul\n    const penulis = state.bookById.penulis\n    const jenis_cover = state.bookById.jenis_cover\n    const foto_buku = state.bookById.foto_buku\n    const harga = state.bookById.harga\n    const stok = 1\n    const berat = state.bookById.berat\n    const status_jual = state.bookById.status\n    const buybook = {\n      book_id : book_id,\n      judul : judul,\n      penulis : penulis,\n      berat : berat,\n      jenis_cover : jenis_cover,\n      harga : harga,\n      stok : stok,\n      foto_buku : foto_buku,\n      status_jual : status_jual\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/cart/add\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: buybook\n    };\n    await axios(req)\n      .then(response => {\n        console.log(response.data.message)\n        store.setState({\n          'addCartStatus':response.data.message\n        })\n        // return response.data.message\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for calculating total price\n  Calculate : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/cart/total\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n        .then(response => {\n          store.setState({\n            \"totalPrice\": response.data,\n            \"disable\": false\n          })\n          return response\n        })\n        .catch(error => {\n          return false\n    })\n\n\n  },\n\n  // Function for getting expedition price\n  CalculateExpeditionPrice : async (state) => {\n    const nama_jalan = state.streetName\n    const rt_rw = state.rt_rw\n    const kelurahan = state.village\n    const kecamatan = state.region\n    const kota_kabupaten = state.cityState\n    const provinsi = state.province\n    const kode_pos = state.postalCode\n    const nomor_telepon = state.phoneNumber\n    const myaddress = {\n      nama_jalan: nama_jalan,\n      rt_rw: rt_rw,\n      kelurahan: kelurahan,\n      kecamatan : kecamatan,\n      kota_kabupaten : kota_kabupaten,\n      provinsi : provinsi,\n      kode_pos : kode_pos,\n      nomor_telepon : nomor_telepon\n    };\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment/ongkir\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      },\n      data: myaddress\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'shippingCost':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for getting final transaction price \n  FinalTransactionPayment : async (state) => {\n    const req = {\n      method: \"post\",\n      url: state.baseUrl+\"/payment_confirm/bill\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'totalPayment':response.data.total_biaya,\n          'orderDate':response.data.tanggal_pemesanan,\n          'orderCode':response.data.nomor_pemesanan\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching book by title or writer\n  searchBook : async (state) => {\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/book/search?keyword=\"+store.getState().keyword,\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          'listResults':response.data\n        })\n        return response\n      })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for searching and grouping user by category\n  categoryBook : async (state,e) => {\n    store.setState({ [e.target.name]: e.target.value });\n    const req = {\n      method: \"get\",\n      url: state.baseUrl+\"/book/category?keyword=\"+store.getState().kategori\n    };\n\n    await axios(req)\n        .then(response => {\n          store.setState({\n            'listCategory':response.data\n          })\n        })\n        .catch(error => {\n          return false\n    })\n  },\n\n  // Function for updating amount of buying item\n  updateBuy : async (state) => {\n    const listBuy = state.totalBeli\n    for (const product of listBuy) {\n      const buybook = {\n        stok : product.stok\n      };\n      const req = {\n        method: \"put\",\n        url: state.baseUrl+\"/cart/product/\"+product.id,\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        data: buybook\n      };\n      await axios(req)\n          .then(response => {\n            const listInCart = store.getState().carts.filter(item => {\n              if (item.id == product.id && item.email === localStorage.getItem('email') && item.foto_buku !== null && item.judul !== null && item.harga !== null && item.status_cart === false && item.berat !== null) {\n                  return item;\n              }\n              return false\n            })\n            const listBooks = []\n            for(const book of listInCart){\n              if(response.data.message=='stok buku tidak mencukupi' && book.book_id){\n                listBooks.push(book.judul)\n              }\n            }\n            store.setState({\n              bookEmptyStock:listBooks\n            })\n          })\n          .catch(error => {\n            return false\n      })\n    }\n  },\n\n  // Function for deleting user by admin\n  deleteUser : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/user/\"+state.userId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n              userId:''\n          })\n    })\n      .catch(error => {\n        return false\n    })\n  },\n\n  // Function for deleting cart on user side\n  deleteCart : async (state,e) => {\n    const req = {\n      method: \"delete\",\n      url: state.baseUrl+\"/cart/product/\"+state.cartId,\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem('token')\n      }\n    };\n    await axios(req)\n      .then(response => {\n        store.setState({\n          userId:''\n          })\n      })\n      .catch(error => {\n        return false\n    })\n  }\n\n  });\n\n\n\n"]},"metadata":{},"sourceType":"module"}